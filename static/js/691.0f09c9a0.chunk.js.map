{"version":3,"file":"static/js/691.0f09c9a0.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const MoviesSection = styled.section`\n    padding-top: ${props => props.theme.sizes(2)};\n    padding-right: ${props => props.theme.sizes(8)};\n    padding-left: ${props => props.theme.sizes(8)};\n    padding-bottom: ${props => props.theme.sizes(2)};\n    background-color: ${props => props.theme.colors.moviesBackground};\n`;\n\n// for SearchForm part\nexport const SearchForm = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n    background-color: ${props => props.theme.colors.white};\n    border-radius: ${props => props.theme.radii.normal};\n    overflow: hidden;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchFormButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${props => props.theme.sizes(6)};\n    height: ${props => props.theme.sizes(6)};\n    border: 0;\n    opacity: 0.6;\n    background-color: ${props => props.theme.colors.secondaryVertical};\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: ${props => props.theme.fontSizes.m}px;\n    border: ${props => props.theme.borders.none};\n    outline: none;\n    padding-left: ${props => props.theme.sizes(1)};\n    padding-right: ${props => props.theme.sizes(1)};\n\n    &::placeholder {\n        font: inherit;\n        font-size: ${props => props.theme.fontSizes.s}px;\n    }\n`;\n\n// for Movies part\nexport const MoviesList = styled.ol`\n    margin: 0;\n    padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n    color: ${props => props.theme.colors.textColor};\n`;\n\nexport const MovieLink = styled(Link)`\n    text-decoration: none;\n    margin-left: ${props => props.theme.sizes(1)};\n    color: ${props => props.theme.colors.textColor};\n\n    &:hover,\n    &:focus {\n        color: ${props => props.theme.colors.inFocusMovieColor};\n        text-decoration: underline ${props => props.theme.colors.inFocusMovieColor};\n    }\n`;\n","import {\n    MoviesSection,\n    SearchForm,\n    SearchFormButton,\n    SearchFormButtonLabel,\n    SearchFormInput,\n    MoviesList,\n    MovieItem,\n    MovieLink,\n} from \"./Movies.styled\";\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [isError, setIsError] = useState(false);\n\n    const query = searchParams.get(\"query\") ?? \"\";\n\n    const location = useLocation();\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        };\n\n        const getMovies = async () => {\n            try {\n                let movies = await api.fetchMoviesBySearch(query);\n                movies = movies.map(movie => {\n                    return movie = {\n                        id: movie.id,\n                        title: movie.title,\n                    }\n                });\n                setMovies(movies);\n            } catch (error) {\n                console.log(error);\n                setIsError(true);\n            }\n        }\n\n        getMovies();\n    }, [query])\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        \n        const form = event.currentTarget;\n        setSearchParams({ query: form.elements.query.value.toLowerCase() });\n\n        if (query.trim() === '') {\n            toast.warn(\"Searchign form is empty! Please input some text.\");\n            return;\n        }\n\n        form.reset();\n    }\n\n    return (\n        <MoviesSection>\n            <SearchForm onSubmit={handleSubmit}>\n                <SearchFormButton type=\"submit\">\n                    <FaSearch size={32}/>\n                    <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n                </SearchFormButton>\n\n                <SearchFormInput\n                    type=\"text\"\n                    name=\"query\"\n                    autocomplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                />\n            </SearchForm>\n\n            {movies?.length !== 0 &&\n                <MoviesList>\n                    {movies?.map(({ id, title}) => (\n                        <MovieItem key={id}>\n                            <MovieLink state={{from: location}} to={`${id}`}>\n                                {title}\n                            </MovieLink>\n                        </MovieItem>\n                    ))}\n                </MoviesList>\n            }\n            \n            {isError && toast.error(\"We have error.\")}\n        </MoviesSection>\n    )\n}\n\nexport default Movies;","import axios from 'axios';\n\nconst moviesAPI = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\nconst API_KEY = 'b2ca45879b59d6f3a6890d4088317ef8';\n\n// get MoviesByTrend\nexport const fetchMoviesByTrend = async () => {\n    const response = await moviesAPI.get('/trending/movie/day?', {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\n// get MoviesBySearch\nexport const fetchMoviesBySearch = async (searchQuery) => {\n    const response = await moviesAPI.get('/search/movie?', {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n        },\n    });\n\n    return response.data.results;\n}\n\n// get MovieById\nexport const fetchMovieById = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data;\n}\n\n// get MovieCast\nexport const fetchMovieCast = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/credits?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\n// get MovieReviews\nexport const fetchMovieReviews = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/reviews?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\nconst api = {\n    fetchMoviesByTrend,\n    fetchMoviesBySearch,\n    fetchMovieById,\n    fetchMovieCast,\n    fetchMovieReviews,\n}\n\nexport default api;"],"names":["MoviesSection","styled","props","theme","sizes","colors","moviesBackground","SearchForm","white","radii","normal","SearchFormButton","secondaryVertical","SearchFormButtonLabel","SearchFormInput","fontSizes","m","borders","none","s","MoviesList","MovieItem","textColor","MovieLink","Link","inFocusMovieColor","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","isError","setIsError","query","get","location","useLocation","useEffect","getMovies","api","map","movie","id","title","console","log","onSubmit","event","preventDefault","form","currentTarget","elements","value","toLowerCase","trim","reset","toast","type","size","name","autocomplete","autoFocus","placeholder","length","state","from","to","moviesAPI","axios","baseURL","API_KEY","fetchMoviesByTrend","params","api_key","response","data","results","fetchMoviesBySearch","searchQuery","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}
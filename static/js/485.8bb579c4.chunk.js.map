{"version":3,"file":"static/js/485.8bb579c4.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const TrendMoviesSection = styled.section`\n    padding-top: ${props => props.theme.sizes(2)};\n    padding-right: ${props => props.theme.sizes(8)};\n    padding-left: ${props => props.theme.sizes(8)};\n    padding-bottom: ${props => props.theme.sizes(2)};\n    background-color: ${props => props.theme.colors.homeBackground};\n`;\n\nexport const TrendSectionTitle = styled.h2`\n    text-align: center;\n    font-size: ${props => props.theme.fontSizes.m}px;\n    font-weight: ${props => props.theme.fontWeights.bold};\n    color: ${props => props.theme.colors.textColor};\n`;\n\nexport const TrendMoviesList = styled.ol`\n    margin: 0;\n    padding: 0;\n`;\n\nexport const TrendMovieItem = styled.li`\n    color: ${props => props.theme.colors.textColor};\n`;\n\nexport const TrendMovieLink = styled(Link)`\n    text-decoration: none;\n    margin-left: ${props => props.theme.sizes(1)};\n    color: ${props => props.theme.colors.textColor};\n\n    &:hover,\n    &:focus {\n        color: ${props => props.theme.colors.inFocusColor};\n        text-decoration: underline ${props => props.theme.colors.inFocusColor};\n    }\n`;\n","import {\n    TrendMoviesSection,\n    TrendSectionTitle,\n    TrendMoviesList,\n    TrendMovieItem,\n    TrendMovieLink\n} from \"./Home.styled\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\n\nconst Home = () => {\n    const [moviesInTrend, setMoviesInTrend] = useState();\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        const getMoviesInTrend = async () => {\n            try {\n                let moviesInTrend = await api.fetchMoviesByTrend();\n                moviesInTrend = moviesInTrend.map(movie => {\n                    return movie = {\n                        id: movie.id,\n                        title: movie.title,\n                    }\n                });\n                setMoviesInTrend(moviesInTrend);\n            } catch (error) {\n                console.log(error);\n                setIsError(true);\n            }\n        }\n\n        getMoviesInTrend();\n    }, [])\n\n    return (\n        <TrendMoviesSection>\n            <TrendSectionTitle>Trending today</TrendSectionTitle>\n            {moviesInTrend?.length !== 0 &&\n                <TrendMoviesList>\n                    {moviesInTrend?.map(({ id, title}) => (\n                        <TrendMovieItem key={id}>\n                            <TrendMovieLink to={`movies/${id}`}>\n                                {title}\n                            </TrendMovieLink>\n                        </TrendMovieItem>\n                    ))}\n                </TrendMoviesList>\n            }\n            \n            {isError && toast.error(\"We have error.\")}\n        </TrendMoviesSection>\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nconst moviesAPI = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\nconst API_KEY = 'b2ca45879b59d6f3a6890d4088317ef8';\n\n// get MoviesByTrend\nexport const fetchMoviesByTrend = async () => {\n    const response = await moviesAPI.get('/trending/movie/day?', {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\n// get MoviesBySearch\nexport const fetchMoviesBySearch = async (searchQuery) => {\n    const response = await moviesAPI.get('/search/movie?', {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n        },\n    });\n\n    return response.data.results;\n}\n\n// get MovieById\nexport const fetchMovieById = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data;\n}\n\n// get MovieCast\nexport const fetchMovieCast = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/credits?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\n// get MovieReviews\nexport const fetchMovieReviews = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/reviews?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\nconst api = {\n    fetchMoviesByTrend,\n    fetchMoviesBySearch,\n    fetchMovieById,\n    fetchMovieCast,\n    fetchMovieReviews,\n}\n\nexport default api;"],"names":["TrendMoviesSection","styled","props","theme","sizes","colors","homeBackground","TrendSectionTitle","fontSizes","m","fontWeights","bold","textColor","TrendMoviesList","TrendMovieItem","TrendMovieLink","Link","inFocusColor","useState","moviesInTrend","setMoviesInTrend","isError","setIsError","useEffect","getMoviesInTrend","api","map","movie","id","title","console","log","length","to","toast","moviesAPI","axios","baseURL","API_KEY","fetchMoviesByTrend","get","params","api_key","response","data","results","fetchMoviesBySearch","searchQuery","query","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}